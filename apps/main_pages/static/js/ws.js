// Generated by CoffeeScript 1.12.7
(function() {
  var WSClient;

  WSClient = (function() {
    function WSClient() {
      this.ws = new WebSocket('ws://localhost:8000');
      this.ws.onmessage = (function(_this) {
        return function(event) {
          var message;
          message = JSON.parse(event.data);
          return _this[message.type](message.data);
        };
      })(this);
      this.channel = {
        'name': null,
        'user_count': 0,
        'unauthorized_count': 0,
        'users': {}
      };
    }

    WSClient.prototype.send = function(type, data) {
      return this.ws.send(JSON.stringify({
        'type': type,
        'data': data
      }));
    };

    WSClient.prototype.send_message = function(message) {
      return this.send('send_message', {
        'text': message
      });
    };

    WSClient.prototype.welcome = function() {
      var session;
      this.send('get_channel_information', null);
      session = $.cookie('session');
      if (session) {
        return this.send('session_auth', {
          'session': session
        });
      }
    };

    WSClient.prototype.channel_information = function(data) {
      return this.channel = data;
    };

    WSClient.prototype.auth_ok = function(data) {
      var par, results;
      results = [];
      for (par in data) {
        results.push(this[par] = data[par]);
      }
      return results;
    };

    WSClient.prototype.success_join = function(data) {
      this.game = {
        'me': {},
        'players': {},
        'game': {}
      };
      this.game.me.id = data.id;
      this.game.players = data.players;
      return this.game.game = data.game;
    };

    WSClient.prototype.new_player_connected = function(data) {
      return this.game.players[data.name] = data;
    };

    WSClient.prototype.user_disconnected = function(data) {
      if (data.user) {
        delete this.channel.users[data.user];
        return this.channel.user_count -= 1;
      } else {
        return this.channel.unauthorized_count -= 1;
      }
    };

    WSClient.prototype.user_connected = function(data) {
      if (data.user) {
        this.channel.users[data.user] = data;
        return this.channel.user_count += 1;
      } else {
        return this.channel.unauthorized_count += 1;
      }
    };

    return WSClient;

  })();

  window.WSClient = WSClient;

}).call(this);

//# sourceMappingURL=ws.js.map
